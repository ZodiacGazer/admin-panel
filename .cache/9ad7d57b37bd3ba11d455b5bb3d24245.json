{"dependencies":[],"generated":{"js":"'use strict';\r\n\r\nexports.__esModule = true;\r\nvar canUseDOM = exports.canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\r\n\r\nvar addEventListener = exports.addEventListener = function addEventListener(node, event, listener) {\r\n  return node.addEventListener ? node.addEventListener(event, listener, false) : node.attachEvent('on' + event, listener);\r\n};\r\n\r\nvar removeEventListener = exports.removeEventListener = function removeEventListener(node, event, listener) {\r\n  return node.removeEventListener ? node.removeEventListener(event, listener, false) : node.detachEvent('on' + event, listener);\r\n};\r\n\r\nvar getConfirmation = exports.getConfirmation = function getConfirmation(message, callback) {\r\n  return callback(window.confirm(message));\r\n}; // eslint-disable-line no-alert\r\n\r\n/**\r\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\r\n *\r\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\r\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\r\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\r\n */\r\nvar supportsHistory = exports.supportsHistory = function supportsHistory() {\r\n  var ua = window.navigator.userAgent;\r\n\r\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\r\n\r\n  return window.history && 'pushState' in window.history;\r\n};\r\n\r\n/**\r\n * Returns true if browser fires popstate on hash change.\r\n * IE10 and IE11 do not.\r\n */\r\nvar supportsPopStateOnHashChange = exports.supportsPopStateOnHashChange = function supportsPopStateOnHashChange() {\r\n  return window.navigator.userAgent.indexOf('Trident') === -1;\r\n};\r\n\r\n/**\r\n * Returns false if using go(n) with hash history causes a full page reload.\r\n */\r\nvar supportsGoWithoutReloadUsingHash = exports.supportsGoWithoutReloadUsingHash = function supportsGoWithoutReloadUsingHash() {\r\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\r\n};\r\n\r\n/**\r\n * Returns true if a given popstate event is an extraneous WebKit event.\r\n * Accounts for the fact that Chrome on iOS fires real popstate events\r\n * containing undefined state when pressing the back button.\r\n */\r\nvar isExtraneousPopstateEvent = exports.isExtraneousPopstateEvent = function isExtraneousPopstateEvent(event) {\r\n  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\r\n};"},"hash":"ad608c4e8fd6f6cd1dc161a9e51c7274"}